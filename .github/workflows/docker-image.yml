name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: testing
        run:  |
          cat ./src/pages/LandingPage.tsx
          cat ./src/pages/SmartSearch.tsx
          ls ./vector-db

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
            
      # - name: 'Create env file'
      #   run: |
      #     touch .env
      #     echo "${{ secrets.ENV_FILE }}" > prod.env
      #     cat prod.env

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_DB_PRIVATE_KEY }}" > ~/.ssh/id_ed25519_db
          chmod 600 ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519_db
          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.VPS_DB_IP }} >> ~/.ssh/known_hosts
      
      # - name: Test SSH Connection
      #   run: |
      #     ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} "echo 'SSH connection successful!'"

      # - name: Update Database Schema
      #   run: |
      #     scp -i ~/.ssh/id_ed25519_db ./db/schema.sql ${{ secrets.VPS_DB_USER }}@${{ secrets.VPS_DB_IP }}:~/schema
      #     ssh -i ~/.ssh/id_ed25519_db ${{ secrets.VPS_DB_USER }}@${{ secrets.VPS_DB_IP }} << EOF
      #       cd schema
      #       mysql -u ${{ secrets.MYSQL_USER }} -p'${{ secrets.MYSQL_PASSWORD }}' ${{ secrets.MYSQL_DATABASE }} < schema.sql
      #     EOF

      - name: Build, push, and run Docker image
        run: |
          touch .env
          echo ${{ secrets.CLERK_PUBLIC_KEY }} > .env
          docker compose build
          docker save -o frontend_image.tar frontend_image
          docker save -o backend_image.tar backend_image
          scp -i ~/.ssh/id_ed25519 docker-compose.yml frontend_image.tar backend_image.tar ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }}:~/docker

          ssh -i ~/.ssh/id_ed25519 ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << EOF
            cd docker
            docker load -i frontend_image.tar
            docker load -i backend_image.tar
            docker compose up -d
            docker image prune -f
          EOF
